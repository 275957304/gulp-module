    {
      "name": "htdocs",
      "version": "1.0.0",
      "description": "",
      "main": "index.js",
      "dependencies": {
        "gulp-cache": "^0.4.1",
        "gulp-autoprefixer": "^3.1.0",
        "gulp-concat": "^2.6.0",
        "gulp-imagemin": "^2.4.0",
        "gulp-jshint": "^2.0.0",
        "gulp-livereload": "^3.8.1",
        "gulp-minify-css": "^1.2.2",
        "gulp-rename": "^1.2.2",
        "gulp-uglify": "^1.5.1",
        "imagemin-pngquant": "^4.2.0",
        "jshint": "^2.8.0"
      },
      "devDependencies": {
        "gulp": "^3.9.0"
      },
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC"
    }
    
        // 引入 gulp
    var gulp = require('gulp');
    // 引入组件
    var jshint = require('gulp-jshint'),    // js代码核验
        minifyCss = require('gulp-minify-css'),    // 压缩css
        autoprefixer = require('gulp-autoprefixer'),    // 自动添加css前缀
        uglify = require('gulp-uglify'),    // 压缩js代码
        imagemin = require('gulp-imagemin'),    // 压缩图片
        pngquant = require('imagemin-pngquant'), //png图片压缩插件
        cache = require('gulp-cache'),  // 只压缩修改的图片，没有修改的图片直接从缓存文件读取
        rename = require('gulp-rename'),    // 重新命名文件
        concat = require('gulp-concat'),    // 合并js文件
        livereload = require('gulp-livereload');    // 自动刷新页面
    // js 文件合并，压缩文件 在命令行使用 gulp script 启动此任务
    gulp.task('js', function() {
        // 找到文件
        gulp.src('./js/*.js')
            // jshint 检查脚本
            .pipe(jshint())
            .pipe(jshint.reporter('default'))
            // 压缩文件
            .pipe(uglify())
            // 合并成all.js
            .pipe(gulp.dest('./dist/js'))
            // js代码合并
            .pipe(concat('index.js'))
            // 压缩文件
            .pipe(uglify())
            // 重新命名为 all.min.js
            .pipe(rename('index.min.js'))
            // 另存到 ./dist 下
            .pipe(gulp.dest('./dist/js'))
            .pipe(livereload());
    });
    // 压缩 css 文件 在命令行使用 gulp css 启动此任务
    gulp.task('css', function () {
        // 找到文件
        gulp.src('css/*.css')
            .pipe(autoprefixer({
                    browsers: ['last 2 versions'],
                    cascade: true, //是否美化属性值 默认：true 像这样：
                    //-webkit-transform: rotate(45deg);
                    //        transform: rotate(45deg);
                    remove:true //是否去掉不必要的前缀 默认：true
                }))
            // 压缩文件
            .pipe(minifyCss())
            .pipe(gulp.dest('./dist/css'))
            .pipe(concat('index.css'))
        // 压缩文件
            .pipe(minifyCss())
            .pipe(rename('index.min.css'))
        // 另存为压缩文件
            .pipe(gulp.dest('./dist/css'))
            .pipe(livereload());
    });
    // 压缩图片任务 在命令行输入 gulp images 启动此任务
    gulp.task('images', function () {
        gulp.src('./images/*.{png,jpg,gif,ico}')
            .pipe(cache(imagemin({
                progressive: true,
                svgoPlugins: [{removeViewBox: false}],  // 不要移除svg的viewbox属性
                use: [pngquant()]   // 使用pngquant深度压缩png图片的imagemin插件
            })))
            .pipe(gulp.dest('./dist/images'))
            .pipe(livereload());
    });
    // 当文件修改执行
    gulp.task('default', function(){
        gulp.watch('./js/*.js', ['js'])
        gulp.watch('./css/*.css', ['css'])
        gulp.watch('./images/*.*', ['images'])
        // 自动刷新
        livereload.listen();
        // // 看任何文件的变化，重新加载
        gulp.watch(['./**/*.*']).on('change', livereload.changed);
    });
